#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWorkTasks
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class LinqWorkerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLeadsTree(LeadsTree instance);
    partial void UpdateLeadsTree(LeadsTree instance);
    partial void DeleteLeadsTree(LeadsTree instance);
    partial void InsertLeadsTreePath(LeadsTreePath instance);
    partial void UpdateLeadsTreePath(LeadsTreePath instance);
    partial void DeleteLeadsTreePath(LeadsTreePath instance);
    #endregion
		
		public LinqWorkerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataSourceConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqWorkerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqWorkerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqWorkerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqWorkerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LeadsTree> LeadsTrees
		{
			get
			{
				return this.GetTable<LeadsTree>();
			}
		}
		
		public System.Data.Linq.Table<LeadsTreePath> LeadsTreePaths
		{
			get
			{
				return this.GetTable<LeadsTreePath>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeadsTree")]
	public partial class LeadsTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _descript;
		
		private string _executors;
		
		private System.Nullable<short> _lead_status;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<double> _plan;
		
		private System.Nullable<double> _lead_time;
		
		private System.Nullable<System.DateTime> _completion_date;
		
		private EntitySet<LeadsTreePath> _LeadsTreePaths;
		
		private EntitySet<LeadsTreePath> _LeadsTreePaths1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    partial void OnexecutorsChanging(string value);
    partial void OnexecutorsChanged();
    partial void Onlead_statusChanging(System.Nullable<short> value);
    partial void Onlead_statusChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void OnplanChanging(System.Nullable<double> value);
    partial void OnplanChanged();
    partial void Onlead_timeChanging(System.Nullable<double> value);
    partial void Onlead_timeChanged();
    partial void Oncompletion_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncompletion_dateChanged();
    #endregion
		
		public LeadsTree()
		{
			this._LeadsTreePaths = new EntitySet<LeadsTreePath>(new Action<LeadsTreePath>(this.attach_LeadsTreePaths), new Action<LeadsTreePath>(this.detach_LeadsTreePaths));
			this._LeadsTreePaths1 = new EntitySet<LeadsTreePath>(new Action<LeadsTreePath>(this.attach_LeadsTreePaths1), new Action<LeadsTreePath>(this.detach_LeadsTreePaths1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(255)")]
		public string descript
		{
			get
			{
				return this._descript;
			}
			set
			{
				if ((this._descript != value))
				{
					this.OndescriptChanging(value);
					this.SendPropertyChanging();
					this._descript = value;
					this.SendPropertyChanged("descript");
					this.OndescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_executors", DbType="VarChar(255)")]
		public string executors
		{
			get
			{
				return this._executors;
			}
			set
			{
				if ((this._executors != value))
				{
					this.OnexecutorsChanging(value);
					this.SendPropertyChanging();
					this._executors = value;
					this.SendPropertyChanged("executors");
					this.OnexecutorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lead_status", DbType="SmallInt")]
		public System.Nullable<short> lead_status
		{
			get
			{
				return this._lead_status;
			}
			set
			{
				if ((this._lead_status != value))
				{
					this.Onlead_statusChanging(value);
					this.SendPropertyChanging();
					this._lead_status = value;
					this.SendPropertyChanged("lead_status");
					this.Onlead_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[plan]", Storage="_plan", DbType="Float")]
		public System.Nullable<double> plan
		{
			get
			{
				return this._plan;
			}
			set
			{
				if ((this._plan != value))
				{
					this.OnplanChanging(value);
					this.SendPropertyChanging();
					this._plan = value;
					this.SendPropertyChanged("plan");
					this.OnplanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lead_time", DbType="Float")]
		public System.Nullable<double> lead_time
		{
			get
			{
				return this._lead_time;
			}
			set
			{
				if ((this._lead_time != value))
				{
					this.Onlead_timeChanging(value);
					this.SendPropertyChanging();
					this._lead_time = value;
					this.SendPropertyChanged("lead_time");
					this.Onlead_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_completion_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> completion_date
		{
			get
			{
				return this._completion_date;
			}
			set
			{
				if ((this._completion_date != value))
				{
					this.Oncompletion_dateChanging(value);
					this.SendPropertyChanging();
					this._completion_date = value;
					this.SendPropertyChanged("completion_date");
					this.Oncompletion_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeadsTree_LeadsTreePath", Storage="_LeadsTreePaths", ThisKey="id", OtherKey="ancestor")]
		public EntitySet<LeadsTreePath> LeadsTreePaths
		{
			get
			{
				return this._LeadsTreePaths;
			}
			set
			{
				this._LeadsTreePaths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeadsTree_LeadsTreePath1", Storage="_LeadsTreePaths1", ThisKey="id", OtherKey="descendant")]
		public EntitySet<LeadsTreePath> LeadsTreePaths1
		{
			get
			{
				return this._LeadsTreePaths1;
			}
			set
			{
				this._LeadsTreePaths1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LeadsTreePaths(LeadsTreePath entity)
		{
			this.SendPropertyChanging();
			entity.LeadsTree = this;
		}
		
		private void detach_LeadsTreePaths(LeadsTreePath entity)
		{
			this.SendPropertyChanging();
			entity.LeadsTree = null;
		}
		
		private void attach_LeadsTreePaths1(LeadsTreePath entity)
		{
			this.SendPropertyChanging();
			entity.LeadsTree1 = this;
		}
		
		private void detach_LeadsTreePaths1(LeadsTreePath entity)
		{
			this.SendPropertyChanging();
			entity.LeadsTree1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeadsTreePath")]
	public partial class LeadsTreePath : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tpid;
		
		private int _ancestor;
		
		private int _descendant;
		
		private EntityRef<LeadsTree> _LeadsTree;
		
		private EntityRef<LeadsTree> _LeadsTree1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntpidChanging(int value);
    partial void OntpidChanged();
    partial void OnancestorChanging(int value);
    partial void OnancestorChanged();
    partial void OndescendantChanging(int value);
    partial void OndescendantChanged();
    #endregion
		
		public LeadsTreePath()
		{
			this._LeadsTree = default(EntityRef<LeadsTree>);
			this._LeadsTree1 = default(EntityRef<LeadsTree>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tpid
		{
			get
			{
				return this._tpid;
			}
			set
			{
				if ((this._tpid != value))
				{
					this.OntpidChanging(value);
					this.SendPropertyChanging();
					this._tpid = value;
					this.SendPropertyChanged("tpid");
					this.OntpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ancestor", DbType="Int NOT NULL")]
		public int ancestor
		{
			get
			{
				return this._ancestor;
			}
			set
			{
				if ((this._ancestor != value))
				{
					if (this._LeadsTree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnancestorChanging(value);
					this.SendPropertyChanging();
					this._ancestor = value;
					this.SendPropertyChanged("ancestor");
					this.OnancestorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descendant", DbType="Int NOT NULL")]
		public int descendant
		{
			get
			{
				return this._descendant;
			}
			set
			{
				if ((this._descendant != value))
				{
					if (this._LeadsTree1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndescendantChanging(value);
					this.SendPropertyChanging();
					this._descendant = value;
					this.SendPropertyChanged("descendant");
					this.OndescendantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeadsTree_LeadsTreePath", Storage="_LeadsTree", ThisKey="ancestor", OtherKey="id", IsForeignKey=true)]
		public LeadsTree LeadsTree
		{
			get
			{
				return this._LeadsTree.Entity;
			}
			set
			{
				LeadsTree previousValue = this._LeadsTree.Entity;
				if (((previousValue != value) 
							|| (this._LeadsTree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeadsTree.Entity = null;
						previousValue.LeadsTreePaths.Remove(this);
					}
					this._LeadsTree.Entity = value;
					if ((value != null))
					{
						value.LeadsTreePaths.Add(this);
						this._ancestor = value.id;
					}
					else
					{
						this._ancestor = default(int);
					}
					this.SendPropertyChanged("LeadsTree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeadsTree_LeadsTreePath1", Storage="_LeadsTree1", ThisKey="descendant", OtherKey="id", IsForeignKey=true)]
		public LeadsTree LeadsTree1
		{
			get
			{
				return this._LeadsTree1.Entity;
			}
			set
			{
				LeadsTree previousValue = this._LeadsTree1.Entity;
				if (((previousValue != value) 
							|| (this._LeadsTree1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeadsTree1.Entity = null;
						previousValue.LeadsTreePaths1.Remove(this);
					}
					this._LeadsTree1.Entity = value;
					if ((value != null))
					{
						value.LeadsTreePaths1.Add(this);
						this._descendant = value.id;
					}
					else
					{
						this._descendant = default(int);
					}
					this.SendPropertyChanged("LeadsTree1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
